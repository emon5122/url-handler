generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
enum UserRole {
  ADMIN
  USER
}
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  urls          Url[]              @relation("UrlCreatedByUser")
  role UserRole @default(USER)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum UrlType {
PUBLIC
PRIVATE
}
model Url {
  id           String   @id @default(cuid())
  givenUrl     String 
  generatedUrl String?  @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  createdById  String?
  createdBy    User?    @relation("UrlCreatedByUser",fields: [createdById], references: [id], onDelete: Cascade)
  lastAccessedAt DateTime?
  openedCount Int @default(0)
  type UrlType @default(PUBLIC)
  sharedWithEmail String[]
}
